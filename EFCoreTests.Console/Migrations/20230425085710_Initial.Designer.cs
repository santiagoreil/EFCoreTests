// <auto-generated />
using EFCoreTests.Console;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreTests.Console.Migrations
{
    [DbContext(typeof(ContextModel))]
    [Migration("20230425085710_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreTests.Console.Models.Shopify_Product", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Shopify_Product");
                });

            modelBuilder.Entity("EFCoreTests.Console.Models.Shopify_ProductImage", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("ProductId");

                    b.ToTable("Shopify_ProductImage");
                });

            modelBuilder.Entity("EFCoreTests.Console.Models.Shopify_ProductOption", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("ProductId");

                    b.ToTable("Shopify_ProductOption");
                });

            modelBuilder.Entity("EFCoreTests.Console.Models.Shopify_Product_Variant", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("ProductId");

                    b.ToTable("Shopify_Product_Variant");
                });

            modelBuilder.Entity("EFCoreTests.Console.Models.Shopify_ProductImage", b =>
                {
                    b.HasOne("EFCoreTests.Console.Models.Shopify_Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EFCoreTests.Console.Models.Shopify_ProductOption", b =>
                {
                    b.HasOne("EFCoreTests.Console.Models.Shopify_Product", "Product")
                        .WithMany("Options")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EFCoreTests.Console.Models.Shopify_Product_Variant", b =>
                {
                    b.HasOne("EFCoreTests.Console.Models.Shopify_Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EFCoreTests.Console.Models.Shopify_Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Options");

                    b.Navigation("Variants");
                });
#pragma warning restore 612, 618
        }
    }
}
